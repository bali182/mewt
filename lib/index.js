module.exports=function(b){const c=Array.isArray(b),e=c?(h)=>[].concat(h):(h)=>Object.assign({},h),f=(h)=>(...i)=>{const j=e(b),k=j[h](...i);return'push pop shift unshift'.includes(h)?[k,j]:k},g={$set:(h,i)=>{const j=e(b);return j[h]=i,j},$unset:(h)=>{const i=e(b);return delete i[h],i}};if(!c&&'object'!=typeof b)throw new Error('mewt accepts array or object');return new Proxy(b,{set:()=>{throw new Error(`${c?'array':'object'} is immutable`)},get:(h,i)=>{return g[i]?g[i]:b[i]&&({}.hasOwnProperty.call(b,i)?b[i]:f(i))}})};